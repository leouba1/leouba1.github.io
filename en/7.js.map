{"version":3,"sources":["./node_modules/@se/web-ui/esm/se-carousel.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2F;AAC9B;AACF;;AAE3D,2BAA2B,+BAA+B,kBAAkB,SAAS,cAAc,SAAS,mBAAmB,sBAAsB,gBAAgB,mBAAmB,kBAAkB,cAAc,oBAAoB,qBAAqB,aAAa,6BAA6B,8BAA8B,+BAA+B,4BAA4B,2BAA2B,uBAAuB,yBAAyB,sBAAsB,2BAA2B,wBAAwB,mBAAmB,qBAAqB,iBAAiB,kBAAkB,kBAAkB,qBAAqB,gBAAgB,wBAAwB,qCAAqC,iCAAiC,6BAA6B,iCAAiC,4BAA4B,oBAAoB,OAAO,kBAAkB,UAAU,yBAAyB,uCAAuC,YAAY,kDAAkD,0CAA0C,mBAAmB,YAAY,yBAAyB,YAAY,SAAS,aAAa,UAAU;;AAErpC;AACA;AACA,IAAI,4DAAgB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAK;AACvB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,eAAe;AAC5E;AACA;AACA,WAAW,uCAAuC;AAClD;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAC,CAAC,oDAAI,+BAA+B,4DAAC,aAAa,6FAA6F,EAAE,4DAAC,UAAU,YAAY,0DAAS,EAAE,KAAK,4DAAC,SAAS,qDAAqD,EAAE,4DAAC,yCAAyC,4DAAC,aAAa,yFAAyF,EAAE,4DAAC,UAAU,YAAY,0DAAS,EAAE;AAC3b;AACA,YAAY,QAAQ,4DAAU,OAAO;AACrC;AACA;;AAEmC","file":"7.js","sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-3d6c5e6f.js';\nimport { i as index } from './ResizeObserver.es-02979d4e.js';\nimport { a as arrowStep } from './arrow5_step-6461af03.js';\n\nconst carouselCss = \":host{--se-carousel-item-width:275px;position:relative;margin:0;display:block}.content{-webkit-box-flex:1;-webkit-flex:1 1 auto;-moz-box-flex:1;-moz-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-box-direction:normal;-webkit-box-orient:horizontal;-webkit-flex-direction:\\\"row\\\";-moz-flex-direction:\\\"row\\\";-ms-flex-direction:\\\"row\\\";flex-direction:\\\"row\\\";-webkit-box-align:center;-ms-flex-align:center;-webkit-align-items:center;-moz-align-items:center;align-items:center;-ms-flex-wrap:nowrap;flex-wrap:nowrap;position:relative;overflow-y:hidden;scrollbar-width:none;overflow-x:auto;-ms-overflow-style:none;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;-webkit-overflow-scrolling:touch}.content::-webkit-scrollbar{height:0 !important}.arrow{position:absolute;z-index:1;top:calc(50% - 28px / 2);background-color:var(--se-alternative);padding:2px;-webkit-box-shadow:1px 1px 4px 0 var(--se-shadow);box-shadow:1px 1px 4px 0 var(--se-shadow)}.arrow.icon-medium{padding:4px;top:calc(50% - 40px / 2)}.arrow.left{left:8px}.arrow.right{right:8px}\";\n\nconst Carousel = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * minimum width of the carousel item. The number of item displayed will be based on it.\n     */\n    this.itemMinWidth = 275;\n    /**\n     * Show a hint of the next item if more item to be seen. if 0, then no hint will be displayed. default is 75.\n     */\n    this.hintWidth = 40;\n    this.size = 'small';\n    this.itemWidth = 0;\n    this.minOffset = 10;\n    this.onScroll = this.onScroll.bind(this);\n  }\n  onScroll() {\n    this.displayArrow();\n  }\n  componentDidLoad() {\n    // Make a first render of the UI\n    this.calculateWidth();\n    this.displayArrow();\n    this.ro = new index(_ => {\n      // Observe any changes in the width container\n      this.calculateWidth();\n      this.displayArrow();\n    });\n    if (this.ro) {\n      this.ro.observe(this.el);\n    }\n    this.contentEl.addEventListener('scroll', this.onScroll);\n    this.size = window.matchMedia('(hover: none) and (pointer: coarse)').matches\n      ? 'medium'\n      : 'small';\n  }\n  calculateWidth() {\n    const { offsetWidth } = this.el;\n    if (!this.hintWidth) {\n      // No need to know how many item there is\n      this.setItemWidth(offsetWidth);\n    }\n    else {\n      // We need to calculate it without the hint, we can fit enough items\n      const nbItem = Array.from(this.el.querySelectorAll('se-carousel-item'))\n        .length;\n      if (offsetWidth / nbItem > this.itemMinWidth) {\n        // All item can fit, we don't need the hint\n        this.setItemWidth(offsetWidth);\n      }\n      else {\n        // we calculate the item width based on the hint width\n        this.setItemWidth(offsetWidth - this.hintWidth);\n      }\n    }\n  }\n  setItemWidth(widthContainer) {\n    this.itemWidth =\n      widthContainer /\n        Math.max(1, Math.floor(widthContainer / this.itemMinWidth));\n    this.el.style.setProperty('--se-carousel-item-width', `${this.itemWidth}px`);\n  }\n  displayArrow() {\n    const { offsetWidth, scrollWidth, scrollLeft } = this.contentEl;\n    const showArrow = offsetWidth < scrollWidth;\n    const errorMargin = 20; // Add 10px in case we only few px off and we don't want to show the arrow\n    this.showLeftArrow = scrollLeft > errorMargin;\n    this.showRightArrow =\n      showArrow && offsetWidth + scrollLeft < scrollWidth - errorMargin;\n  }\n  scroll(delta) {\n    this.contentEl.scrollBy({\n      left: delta * this.itemWidth,\n      behavior: 'smooth',\n    });\n  }\n  disconnectedCallback() {\n    if (this.ro) {\n      this.ro.disconnect();\n    }\n    this.contentEl.removeEventListener('scroll', this.onScroll);\n  }\n  render() {\n    return (h(Host, null, this.showLeftArrow && (h(\"se-icon\", { class: \"arrow left\", onClick: () => this.scroll(-1), size: this.size, mirror: \"horizontal\" }, h(\"span\", { innerHTML: arrowStep }))), h(\"div\", { class: \"content\", ref: el => (this.contentEl = el) }, h(\"slot\", null)), this.showRightArrow && (h(\"se-icon\", { class: \"arrow right\", option: \"button\", onClick: () => this.scroll(1), size: this.size }, h(\"span\", { innerHTML: arrowStep })))));\n  }\n  get el() { return getElement(this); }\n};\nCarousel.style = carouselCss;\n\nexport { Carousel as se_carousel };\n"],"sourceRoot":"webpack:///"}