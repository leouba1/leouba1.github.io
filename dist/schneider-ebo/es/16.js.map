{"version":3,"sources":["./node_modules/@se/web-ui/esm/se-pagination.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA4F;AACjC;;AAE3D;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,qBAAqB,MAAM,cAAc,MAAM,iCAAiC,yBAAyB,UAAU,oBAAoB,aAAa,mBAAmB,sBAAsB,mBAAmB,eAAe,kBAAkB,gBAAgB,gBAAgB,eAAe,gBAAgB,OAAO,gBAAgB,eAAe,QAAQ,2BAA2B,oBAAoB,YAAY,cAAc,oBAAoB,aAAa,sBAAsB,mBAAmB,gCAAgC,qBAAqB,WAAW,iBAAiB,iBAAiB;;AAEhnB;AACA;AACA,IAAI,4DAAgB;AACpB,wBAAwB,4DAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,6EAA6E,GAAG,GAAG;AAC7J;AACA,4BAA4B,QAAQ,GAAG,GAAG;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,oGAAoG,qBAAqB,GAAG,kBAAkB,yBAAyB;AACvK;AACA;AACA;AACA;AACA;AACA,2GAA2G,GAAG,kBAAkB,yBAAyB;AACzJ;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAC,CAAC,oDAAI,QAAQ,4DAAC,SAAS,kBAAkB,yCAAyC,4DAAC,SAAS,oBAAoB,EAAE,4DAAC,mCAAmC,4DAAC,mBAAmB,qDAAqD,EAAE,4DAAC,YAAY,2CAA2C,qCAAqC,4DAAC,YAAY,uEAAuE,mBAAmB,4DAAC,SAAS,sBAAsB,qBAAqB,4DAAC,aAAa,yMAAyM,IAAI,4DAAC,aAAa,sLAAsL,0DAAS,EAAE,GAAG,4DAAC,WAAW,SAAS,oBAAoB,EAAE,EAAE,4DAAC,UAAU,iBAAiB,oBAAoB,4DAAC,mBAAmB,kEAAkE,EAAE,4DAAC,YAAY,oCAAoC,iCAAiC,4DAAC,YAAY,uCAAuC,UAAU,4DAAC,UAAU,iBAAiB,0BAA0B,4DAAC,aAAa,qKAAqK,0DAAS,EAAE,sBAAsB,4DAAC,aAAa,+LAA+L;AAChrD;AACA;AACA;;AAEgD","file":"16.js","sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host } from './index-3d6c5e6f.js';\nimport { a as arrowStep } from './arrow5_step-6461af03.js';\n\nconst arrowEdge = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 1024 1024\" style=\"enable-background:new 0 0 1024 1024;\" xml:space=\"preserve\">\n<path d=\"M718,129.6c-11.9,0-21.5,9.6-21.5,21.5v330.6L320.6,135.1c-8.7-8.1-22.3-7.5-30.4,1.2c-8,8.7-7.5,22.3,1.2,30.4l374.4,345.3\n\tL291.6,857.1c-8.7,8-9.3,21.7-1.2,30.4c4.2,4.6,10,6.9,15.8,6.9c5.2,0,10.4-1.9,14.6-5.7l375.8-346.5v331c0,11.9,9.6,21.5,21.5,21.5\n\ts21.5-9.6,21.5-21.5v-722C739.5,139.3,729.9,129.6,718,129.6z\"/>\n</svg>\n`;\n\nconst paginationCss = \":host{display:inline-block}.edge{padding:0 4px}.left{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.pageSize{display:-ms-flexbox;display:flex;padding-right:16px;-ms-flex-align:center;align-items:center}.pageSize>span{padding-right:8px;font-weight:300;line-height:1.2;font-size:14px;font-weight:550}.label{font-weight:550;font-size:14px}.flexed{display:-ms-inline-flexbox;display:inline-flex}.pagination{padding:0 4px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.pagination .form-field-wrapper{display:inline-block;width:70px;margin-right:8px;margin-left:12px}\";\n\nconst PaginationComponent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.eventEmitter = createEvent(this, \"didChange\", 7);\n    this.defaultPageSizeList = 15;\n    /**\n     * Number of item per page\n     */\n    this.perPage = 15;\n    /**\n     * List of per page options to select from as a string separated by `;`. Default is `\"15\"` but does not affect the component if not used. ex: `\"15;20;25;30\"`.\n     */\n    this.perPageList = '15'; // '10;15;25;50';\n    /**\n     * Selected page\n     */\n    this.value = 1;\n    /**\n     * Total number of pages. Used to go to the last page and in the page selection dropdown.\n     */\n    this.total = 1;\n    /**\n     * Label used when hover the \"Go to first page\" icon.\n     */\n    this.labelFirst = 'First Page';\n    /**\n     * Label used when hover the \"Go to previous page\" icon.\n     */\n    this.labelPrev = 'Previous Page';\n    /**\n     * Label used when hover the \"Go to next page\" icon.\n     */\n    this.labelNext = 'Next Page';\n    /**\n     * Label used when hover the \"Go to last page\" icon.\n     */\n    this.labelLast = 'Last Page';\n    /**\n     * Text before the number of item per page selection dropdown.\n     */\n    this.labelPerPage = 'Items per page';\n    /**\n     * Text before the page selection dropdown.\n     */\n    this.labelValue = 'Page';\n  }\n  componentDidLoad() {\n    if (this.total === null) {\n      console.warn(`[se-pagination] component needs to have [total] attribute configured.`);\n    }\n    // console.log('pagination mounted', this.perPage);\n    if (this.perPage == null) {\n      this.perPage = this.__parPageSizeList()[0];\n    }\n  }\n  __parPageSizeList() {\n    try {\n      // tslint:disable-next-line: radix\n      const r = this.perPageList.split(';').map(n => parseInt(n));\n      if (r.length === 0) {\n        console.warn(`[se-pagination] pageSizeList must have at least one element. page sizes are ';' separated. ex: '10;15;20'. Assuming: [${this.defaultPageSizeList}]`);\n        return [this.defaultPageSizeList];\n      }\n      return r;\n    }\n    catch (error) {\n      console.warn(`[se-pagination] Can't parse pageSizeList in Pagination Component, expected format: '10;20;50'. Assuming: '${this.defaultPageSizeList}''`, error);\n      return [this.defaultPageSizeList];\n    }\n  }\n  __perPageList() {\n    const arrayNumber = [];\n    const max = this.maxPage();\n    for (let index = 1; index <= max; index++) {\n      arrayNumber.push(index);\n    }\n    return arrayNumber;\n  }\n  __pageSizeChanged(e) {\n    const target = e.target;\n    // console.log(e, target, target.value);\n    this.value = 1;\n    this.perPage = Math.floor(target.value); // in case someone types a fraction\n    this.eventEmitter.emit({\n      value: 1,\n      perPage: this.perPage,\n    });\n  }\n  __goToFirstPage() {\n    this.value = 1;\n    this.eventEmitter.emit({\n      value: 1,\n      perPage: this.perPage,\n    });\n  }\n  __goToPrevPage() {\n    this.value = Math.max(1, this.value - 1);\n    this.eventEmitter.emit({\n      value: this.value,\n      perPage: this.perPage,\n    });\n  }\n  __goToNextPage() {\n    this.value = Math.min(this.maxPage(), this.value + 1);\n    this.eventEmitter.emit({\n      value: this.value,\n      perPage: this.perPage,\n    });\n  }\n  __goToLastPage() {\n    this.value = this.maxPage();\n    this.eventEmitter.emit({\n      value: this.value,\n      perPage: this.perPage,\n    });\n  }\n  __goToPage(e) {\n    // console.log(e, e.target);\n    const target = e.target;\n    // console.log(\"Goto page\", e, e.target, target.value)\n    this.value = Math.floor(target.value);\n    this.eventEmitter.emit({\n      value: this.value,\n      perPage: this.perPage,\n    });\n  }\n  maxPage() {\n    return Math.max(this.total, 1);\n  }\n  render() {\n    const isFirst = this.value === 1;\n    const isLast = this.value === this.maxPage();\n    return (h(Host, null, h(\"div\", { class: \"flexed\" }, this.__parPageSizeList().length > 1 ? (h(\"div\", { class: \"pageSize\" }, h(\"span\", null, this.labelPerPage), h(\"se-form-field\", { type: \"select\", option: \"stacked\", padding: \"none\" }, h(\"select\", { onChange: e => this.__pageSizeChanged(e) }, this.__parPageSizeList().map(i => (h(\"option\", { value: i, selected: i === (this.perPage || this.defaultPageSizeList) }, i))))))) : (''), h(\"div\", { class: \"pagination\" }, !this.hideEdge && (h(\"se-icon\", { slot: \"icon\", class: \"left edge\", option: \"button\", disabled: isFirst, onClick: () => !isFirst && this.__goToFirstPage(), title: this.labelFirst, \"arial-label\": this.labelFirst, innerHTML: arrowEdge })), h(\"se-icon\", { slot: \"icon\", class: \"left\", option: \"button\", disabled: isFirst, onClick: () => !isFirst && this.__goToPrevPage(), title: this.labelPrev, \"arial-label\": this.labelPrev, innerHTML: arrowStep }), h(\"label\", { style: { padding: '0 12px' } }, h(\"span\", { class: \"label\" }, this.labelValue), h(\"se-form-field\", { type: \"select\", padding: \"none\", block: true, option: \"stacked\" }, h(\"select\", { onChange: e => this.__goToPage(e) }, this.__perPageList().map(i => (h(\"option\", { value: i, selected: i === this.value }, i))))), h(\"span\", { class: \"label\" }, \"/ \", this.maxPage())), h(\"se-icon\", { slot: \"icon\", option: \"button\", disabled: isLast, onClick: () => !isLast && this.__goToNextPage(), title: this.labelNext, \"arial-label\": this.labelNext, innerHTML: arrowStep }), !this.hideEdge && (h(\"se-icon\", { slot: \"icon\", class: \"edge\", option: \"button\", disabled: isLast, onClick: () => !isLast && this.__goToLastPage(), title: this.labelLast, \"arial-label\": this.labelLast, innerHTML: arrowEdge }))))));\n  }\n};\nPaginationComponent.style = paginationCss;\n\nexport { PaginationComponent as se_pagination };\n"],"sourceRoot":"webpack:///"}